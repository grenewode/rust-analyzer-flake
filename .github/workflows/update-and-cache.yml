name: update-and-cache

on:
  workflow_dispatch:

  schedule:
    - cron: '0 0 * * *'

jobs:
  update-releases:
    runs-on: ubuntu-latest
    outputs:
      release-files: ${{ steps.find-releases.outputs.release-files }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: main

      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Update releases
        run: ./update.sh

      - name: Commit Changes
        id: commit
        continue-on-error: true
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .releases
          git commit -m "update releases"
      - name: Push changes
        if: steps.commit.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      - name: Find Releases
        id: find-releases
        run: |
          output=$(jq -n --compact-output --args '$ARGS.positional' .releases/*)
          echo "release-files=${output}" >> $GITHUB_OUTPUT
  
  update-cachix:
    runs-on: ubuntu-latest
    needs:
      - update-releases
    strategy:
      max-parallel: 24
      matrix:
        release-file: ${{ fromJson(needs.update-releases.outputs.release-files) }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: rust-analyzer-flake
          extraPullNames: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: true
      - name: Compile And Push
        env:
          CACHIX_AUTH_TOKEN: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          RELEASE_FILE: ${{ matrix.release-file }}
        run: |
          RELEASE_FILE=$(basename $RELEASE_FILE)
          
          nix build --keep-going --print-out-paths ".#rust-analyzer-${RELEASE_FILE%.*}" | cachix push rust-analyzer-flake
            
